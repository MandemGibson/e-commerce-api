// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum Condition {
  NEW
  REFURBISHED
  USED
}

model User {
  id          String  @id @default(cuid())
  email       String  @unique
  password    String
  name        String?
  phoneNumber String?
  address     String?
  role        Role    @default(CUSTOMER)
  cart        Cart?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              String  @id @default(cuid())
  productName     String
  brand           String
  model           String?
  storage         String?
  color           String?
  os              String? // Operating system for phones
  batteryCapacity Int?
  type            String? // e.g., charger, case
  compatibility   String? // Accessories compatibility

  price        Float
  description  String
  quantity     Int
  categoryId   String? // e.g., "Phones" or "Accessories"
  category     Category? @relation(fields: [categoryId], references: [id])
  imageUrl     String
  warranty     String? // e.g., "1 year", "6 months"
  dimensions   String? // e.g., "15x8x1 cm"
  condition    Condition
  availability Boolean   @default(true)
  Cart         Cart?     @relation(fields: [cartId], references: [id])
  cartId       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String    @id @default(cuid())
  quantity  Int
  price     Float
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id])
  productId String
  products  Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Admin {
  id       String @id @default(cuid())
  email    String @unique
  password String
  role     Role   @default(ADMIN)
}

model Otp {
  id        String   @id @default(cuid())
  otp       String
  expiresIn DateTime
  valid     Boolean  @default(true)
  createdAt DateTime @default(now())
  userId    String
}

model ResetToken {
  id        String   @id @unique @default(uuid())
  token     String
  userId    String
  valid     Boolean  @default(true)
  expiresIn DateTime
  createdAt DateTime @default(now())
}
